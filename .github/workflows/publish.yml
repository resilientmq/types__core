name: Test and Publish Package

on:
  push:
    branches:
      - master

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: npm ci

      - name: Run TSD type tests
        run: npx tsd

      # Get current version
      - name: Get current version
        id: current
        run: |
          echo "version=$(node -p \"require('./package.json').version\")" >> $GITHUB_OUTPUT
          echo "name=$(node -p \"require('./package.json').name\")" >> $GITHUB_OUTPUT

      # Get previous version from git history
      - name: Get previous version from last commit
        id: previous
        run: |
          git fetch --depth=2
          PREV_VERSION=$(git show HEAD^:package.json | jq -r '.version')
          echo "version=$PREV_VERSION" >> $GITHUB_OUTPUT

      # Compare versions
      - name: Check if version changed
        id: version-changed
        run: |
          if [ "${{ steps.current.outputs.version }}" = "${{ steps.previous.outputs.version }}" ]; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      # Validate patch or minor bump
      - name: Validate semantic version bump
        id: semver-check
        if: steps.version-changed.outputs.changed == 'true'
        run: |
          npm install semver
          MAJOR_DIFF=$(npx semver diff ${{ steps.previous.outputs.version }} ${{ steps.current.outputs.version }})
          if [ "$MAJOR_DIFF" = "major" ]; then
            echo "allowed=false" >> $GITHUB_OUTPUT
          else
            echo "allowed=true" >> $GITHUB_OUTPUT
          fi

      # Check if version already published
      - name: Check if version is already published
        id: version-check
        run: |
          PUBLISHED=$(npm view ${{ steps.current.outputs.name }}@${{ steps.current.outputs.version }} version || echo "null")
          if [ "$PUBLISHED" = "${{ steps.current.outputs.version }}" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      # Publish if all conditions pass
      - name: Publish to NPM
        if: |
          steps.version-check.outputs.exists == 'false' &&
          steps.version-changed.outputs.changed == 'true' &&
          steps.semver-check.outputs.allowed == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Fallbacks
      - name: Skip publish (version unchanged)
        if: steps.version-changed.outputs.changed == 'false'
        run: echo "‚è≠Ô∏è Version not changed. Skipping publish."

      - name: Skip publish (major bump not allowed)
        if: |
          steps.version-changed.outputs.changed == 'true' &&
          steps.semver-check.outputs.allowed == 'false'
        run: echo "üö´ Major version bumps not allowed automatically."
